import Head from 'next/head'
import { useEffect, useState } from 'react';
import styles from '../styles/Home.module.css'
import { Card } from '../components';
import axios from 'axios';
import { Formik, Form, Field, ErrorMessage } from 'formik';
import * as Yup from 'yup';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import useSWR from 'swr';


const initialValues = {
  title: '',
  description: ''
}

const validationSchema = Yup.object({
  title: Yup.string().min(2).max(20),
  description: Yup.string().min(2).max(30)
});

/*
I can write code using  swr for client site data featching but to make it simple used useEffect 
and redux-toolkit / react-redux for manage data across whole application but application is smaller so no need of that.
and that one is not optimized one but i can write clean code 
*/


export default function Home() {

  const [notes, setNotes] = useState([]);

  useEffect(() => {
    (async () => {
      const response = await axios.get('http://127.0.0.1:5000/api/note').catch(error => error.response);
      response.status === 200 ? setNotes(response.data) : null;
    })();
  }, []);

  useEffect(() => {
  }, [notes]);

  const handleSubmit = async (values, { resetForm }) => {
    const { title, description } = values;

    setNotes([...notes, { title, description }]);

    const response = await axios.post('http://127.0.0.1:5000/api/note', {
      title, description
    }).catch(error => error.response);

    response?.status === 200 ? toast('New Note Created', {
      position: "top-left",
    }) : toast(response?.data.message, {
      position: "top-left",
    });

    resetForm();
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Intern Task 01</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-screen container mx-auto space-y-8 py-8">
        <ToastContainer
          position="top-right"
          autoClose={3000}
          hideProgressBar={false}
          newestOnTop={false}
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="dark"
        />

        <div className="card card-compact w-96 bg-base-100 shadow-xl p-8">
          <div className="w-full flex justify-center items-center">
            <div className="max-w-3xl">
              <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>
                <Form>
                  <div className="w-full space-y-6">
                    <Field type="text" name="title" placeholder="Title" className="input input-bordered w-full" />
                    <Field as="textarea" type="text" name="description" className="textarea textarea-bordered w-full" placeholder="Description" />
                  </div>
                  <div className="modal-action justify-start">
                    <button className="btn" type='submit'>create note</button>
                  </div>
                </Form>
              </Formik>
            </div>
          </div>
        </div>
        <div className="w-full flex justify-between flex-wrap gap-y-6">
          {
            notes.length !== 0 ?
              notes.map((note) => {
                return <Card key={note._id} note={note} id={note._id} />;
              })
              : <Card key={'sample'} note={{ title: 'Sample Title', description: 'Sample Description' }} />
          }
        </div>
      </div>
    </div>
  )
}
